name: CI

on: [push, pull_request]

jobs:
  Coverage:
    runs-on: ubuntu-latest
    env:
      COVERALLS_GIT_BRANCH: "${{ github.ref }}"
      COVERALLS_REPO_TOKEN: "${{ secrets.COVERALLS_REPO_TOKEN }}"
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: cpp-coveralls
      run: pip install cpp-coveralls PyYAML
    - name: depends
      run: sudo apt update && sudo apt install -y libssl-dev luajit libluajit-5.1-dev valgrind
    - name: run
      run: make coveralls

  Valgrind:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: depends
      run: sudo apt update && sudo apt install -y libssl-dev luajit libluajit-5.1-dev valgrind
    - name: run
      run: make valgrind

  Asan:
    runs-on: macos-latest
    env:
      PKG_CONFIG_PATH: /usr/local/opt/openssl/lib/pkgconfig
      LSAN_OPTIONS: suppressions=../.github/asan.supp
      ASAN_OPTIONS: detect_leaks=1:check_initialization_order=1
      UBSAN_OPTIONS: print_stacktrace=1
      CC: clang
      LD: clang
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: depends
      run: brew install luajit --HEAD
    - name: run
      run: export PATH=/usr/local/opt/llvm/bin:$PATH && make asan

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        luarocks_version: [2.4.4]
        #luarocks_version: [2.4.4, 3.7.0]
        lua_version: [luajit2.1]
        #openssl_version: [openssl-1.0.2u, libressl-3.2.5, openssl-1.1.1j]
        openssl_version: [openssl-1.0.2u, openssl-1.1.1j]
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.12
      LUAROCKS: ${{ matrix.luarocks_version }}
      LUA: ${{ matrix.lua_version }}
      SSL: ${{ matrix.openssl_version }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Setup
      run:
        .github/shell/setup_lua.sh && .github/shell/setup_ssl.sh

    - name: Build
      run:
        .github/shell/build.sh

    - name: Test
      run:
        PKG_CONFIG_PATH=$HOME/.usr/lib/pkgconfig PATH=$HOME/.usr/bin:$PATH LD_LIBRARY_PATH=$HOME/.usr/lib make test

